// Code generated by MockGen. DO NOT EDIT.
// Source: services.go

// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"

	currencies "github.com/fairytale5571/ipcurrency/pkg/currencies"
	errorops "github.com/fairytale5571/ipcurrency/pkg/errorops"
	ipinfo "github.com/fairytale5571/ipcurrency/pkg/ipinfo"
	gomock "github.com/golang/mock/gomock"
)

// MockIPInfo is a mock of IPInfo interface.
type MockIPInfo struct {
	ctrl     *gomock.Controller
	recorder *MockIPInfoMockRecorder
}

// MockIPInfoMockRecorder is the mock recorder for MockIPInfo.
type MockIPInfoMockRecorder struct {
	mock *MockIPInfo
}

// NewMockIPInfo creates a new mock instance.
func NewMockIPInfo(ctrl *gomock.Controller) *MockIPInfo {
	mock := &MockIPInfo{ctrl: ctrl}
	mock.recorder = &MockIPInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPInfo) EXPECT() *MockIPInfoMockRecorder {
	return m.recorder
}

// GetExchangeRate mocks base method.
func (m *MockIPInfo) GetExchangeRate(countryCode string) ([]currencies.CurrencyRateToUAH, *errorops.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRate", countryCode)
	ret0, _ := ret[0].([]currencies.CurrencyRateToUAH)
	ret1, _ := ret[1].(*errorops.Error)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate.
func (mr *MockIPInfoMockRecorder) GetExchangeRate(countryCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockIPInfo)(nil).GetExchangeRate), countryCode)
}

// GetIPInfo mocks base method.
func (m *MockIPInfo) GetIPInfo(ip string) (ipinfo.IPInformation, *errorops.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIPInfo", ip)
	ret0, _ := ret[0].(ipinfo.IPInformation)
	ret1, _ := ret[1].(*errorops.Error)
	return ret0, ret1
}

// GetIPInfo indicates an expected call of GetIPInfo.
func (mr *MockIPInfoMockRecorder) GetIPInfo(ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIPInfo", reflect.TypeOf((*MockIPInfo)(nil).GetIPInfo), ip)
}
